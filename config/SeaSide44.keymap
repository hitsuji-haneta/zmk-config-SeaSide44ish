#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB         &kp Q  &kp W         &kp E         &kp R        &kp T                                      &kp Y        &kp U  &kp I            &kp O       &kp P          &kp BACKSPACE
&kp LCTRL       &kp A  &kp S         &kp D         &kp F        &kp G                                      &kp H        &kp J  &kp K            &kp L       &kp SEMICOLON  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X         &kp C         &kp V        &kp B                                      &kp N        &kp M  &kp COMMA        &kp PERIOD  &kp SLASH      &kp RIGHT_SHIFT
                       &kp LEFT_ALT  &kp LEFT_WIN  &lt 5 LANG2  &lt 4 SPACE  &lt 5 LANG1    &kp RIGHT_WIN  &lt 3 SPACE         &lt 4 BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&trans  &kp PRCNT  &kp DOLLAR  &kp AMPERSAND  &kp CARET        &kp FSLH                           &kp BSLH        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN   &kp N0
&trans  &kp AT     &kp HASH    &kp ASTERISK   &kp PLUS         &kp EQUAL                          &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI       &kp COLON          &kp N1
&trans  &kp GRAVE  &kp TILDE   &kp MINUS      &kp EXCLAMATION  &kp QUESTION                       &kp PIPE        &kp LBKT              &kp RBKT               &kp SQT        &kp DOUBLE_QUOTES  &kp N2
                   &trans      &trans         &trans           &trans        &trans    &kp COMMA  &kp PERIOD                            &kp ESC
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE      &trans        &trans        &trans      &trans  &trans                    &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LCTRL       &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE  &trans  &trans                    &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SINGLE_QUOTE  &kp ENTER
&kp LEFT_SHIFT  &trans        &trans        &trans      &trans  &trans                    &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp GRAVE         &kp RIGHT_SHIFT
                              &trans        &trans      &trans  &trans  &trans    &trans  &kp NUMBER_0                &kp PERIOD
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans                    &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans                    &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP_ARROW      &kp RIGHT_ARROW      &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans                    &trans              &trans              &trans            &trans               &trans  &trans
                    &trans  &trans  &trans  &trans  &trans    &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans                    &mo 5      &mo 5      &mo 5      &mo 5      &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans                    &mkp LCLK  &mkp LCLK  &mkp LCLK  &mkp LCLK  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans                    &mkp RCLK  &mkp RCLK  &mkp RCLK  &mkp RCLK  &trans  &trans
                    &trans  &trans  &trans  &trans  &trans    &trans  &trans                &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE        &trans             &trans           &trans      &trans  &trans                                       &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_CONTROL  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE  &trans  &trans                                       &kp MINUS     &kp NUMBER_4  &kp NUMBER_5   &kp NUMBER_6  &kp SINGLE_QUOTE  &kp ENTER
&kp LEFT_SHIFT    &trans             &trans           &trans      &trans  &trans                                       &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp GRAVE         &kp RIGHT_SHIFT
                                     &trans           &trans      &trans  &kp LS(LG(N5))  &kp LS(LG(N4))    &kp SPACE  &kp N0                      &kp BACKSLASH
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
